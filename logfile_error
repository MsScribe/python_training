C:\Users\ScherbakovaN\env\Scripts\python.exe C:/Python/Scripts/python_training/check_db_connection.py
GET CONNECTION FROM THE LOCAL POOL
SELECT `c`.`id`, `c`.`firstname`, `c`.`lastname`, `c`.`deprecated`
FROM `addressbook` `c`
WHERE `c`.`deprecated` IS NULL

ROLLBACK
RELEASE CONNECTION
Traceback (most recent call last):
  File "C:/Python/Scripts/python_training/check_db_connection.py", line 7, in <module>
    l = db.get_contact_list()
  File "<string>", line 2, in get_contact_list
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 528, in new_func
    result = func(*args, **kwargs)
  File "C:\Python\Scripts\python_training\fixture\orm.py", line 50, in get_contact_list
    return self.convert_contacts_to_model(select(c for c in ORMFixture.ORMContact if c.deprecated is None))
  File "C:\Python\Scripts\python_training\fixture\orm.py", line 46, in convert_contacts_to_model
    return list(map(convert, contacts))
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 6275, in next
    qr._items = qr._query._actual_fetch(qr._limit, qr._offset)
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 5834, in _actual_fetch
    items = entity._fetch_objects(cursor, attr_offsets, for_update=query._for_update,
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 4295, in _fetch_objects
    real_entity_subclass, pkval, avdict = entity._parse_row_(row, attr_offsets)
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 4335, in _parse_row_
    avdict[attr] = attr.parse_value(row, offsets, cache.dbvals_deduplication_cache)
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 2232, in parse_value
    dbval = attr.validate(row[offset], None, attr.entity, from_db=True)
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\core.py", line 2204, in validate
    if from_db: return converter.sql2py(val)
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\orm\dbapiprovider.py", line 770, in sql2py
    if not isinstance(val, datetime): throw(ValueError,
  File "C:\Users\ScherbakovaN\env\lib\site-packages\pony\utils\utils.py", line 106, in throw
    raise exc
ValueError: Value of unexpected type received from database: instead of datetime got <class 'str'>

Process finished with exit code 1